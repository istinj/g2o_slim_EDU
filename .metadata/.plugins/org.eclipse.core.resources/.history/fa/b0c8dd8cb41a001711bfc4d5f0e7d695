#include <iostream>
#include <Eigen/Core>

#include "SparseMatrix.h"
#include "SparseBlockMatrix.h"
#include "RHSVector.h"

int main(int argc, char const *argv[])
{

	sparse::SparseBlockMatrix<Eigen::Matrix2f> sp_block_mat(6,6,2);
	sparse::DenseVector<Eigen::Vector2f> rhs_B(6,2);
	Eigen::Matrix2f a, a_plus_a;
	Eigen::Vector2f b;

	//! Setup the linear system (retarded fashion)
	a <<  142,   123,   160,    91,    64,    69,
			123,   203,   200,   134,   112,   137,
			160,   200,   272,   162,   138,   142,
			91,   134,   162,   140,   117,  128,
			64,   112,   138,   117,   121,   132,
			69,   137,   142,   128,   132,   162;
	a_plus_a << 284,   246,   320,   182,   128,   138,
			246,   406,   400,   268,   224,   274,
			320,   400,   544,   324,   276,   284,
			182,   268,   324,   280,   234,   256,
			128,   224,   276,   234,   242,   264,
			138,   274,   284,   256,   264,   324;
	sp_block_mat.setBlock(0,0,a);

	sp_block_mat.setBlock(5,5,a);





	//! RHS
	b << 		     3,
			10;
	rhs_B.setBlock(0, b);

	b << 			 2,
			 9;
	rhs_B.setBlock(1, b);

	b << 			 6,
			10;
	rhs_B.setBlock(2, b);

	b <<  			 1,
			 5;
	rhs_B.setBlock(3, b);

	b << 			 2,
			10;
	rhs_B.setBlock(4, b);

	b << 		1,
			8;
	rhs_B.setBlock(5, b);

	//! Solving linear system Ax = B
	sparse::DenseVector<Eigen::Vector2f> deltaX(6,2);
	sp_block_mat.solveLinearSystem(rhs_B, deltaX);

	cout << endl << BOLDGREEN << "Solution of the system:" << RESET <<  endl;
	deltaX.printVector();



	return 0;
}

